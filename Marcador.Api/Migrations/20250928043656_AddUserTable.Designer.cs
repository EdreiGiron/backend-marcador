// <auto-generated />
using System;
using Marcador.Api.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marcador.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250928043656_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Marcador.Api.Models.GameSnapshot", b =>
                {
                    b.Property<string>("MatchId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SavedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Possession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<int>("QuarterDurationMs")
                        .HasColumnType("int");

                    b.Property<int>("TimeLeftMs")
                        .HasColumnType("int");

                    b.HasKey("MatchId", "SavedAtUtc");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Marcador.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Marcador.Api.Models.GameSnapshot", b =>
                {
                    b.OwnsOne("Marcador.Api.Models.TeamState", "Away", b1 =>
                        {
                            b1.Property<string>("GameSnapshotMatchId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("GameSnapshotSavedAtUtc")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Fouls")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Score")
                                .HasColumnType("int");

                            b1.Property<int>("Timeouts30")
                                .HasColumnType("int");

                            b1.Property<int>("Timeouts60")
                                .HasColumnType("int");

                            b1.HasKey("GameSnapshotMatchId", "GameSnapshotSavedAtUtc");

                            b1.ToTable("Games");

                            b1.WithOwner()
                                .HasForeignKey("GameSnapshotMatchId", "GameSnapshotSavedAtUtc");
                        });

                    b.OwnsOne("Marcador.Api.Models.TeamState", "Home", b1 =>
                        {
                            b1.Property<string>("GameSnapshotMatchId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("GameSnapshotSavedAtUtc")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Fouls")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Score")
                                .HasColumnType("int");

                            b1.Property<int>("Timeouts30")
                                .HasColumnType("int");

                            b1.Property<int>("Timeouts60")
                                .HasColumnType("int");

                            b1.HasKey("GameSnapshotMatchId", "GameSnapshotSavedAtUtc");

                            b1.ToTable("Games");

                            b1.WithOwner()
                                .HasForeignKey("GameSnapshotMatchId", "GameSnapshotSavedAtUtc");
                        });

                    b.Navigation("Away")
                        .IsRequired();

                    b.Navigation("Home")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
